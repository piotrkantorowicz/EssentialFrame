name: Build and tests on pull request - EssentialFrame

on:
  pull_request:
    branches: [ 'stage*',dev,main ]
env:
  DOTNET_VERSION: '7.0.x'

jobs:
  build-and-push-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ "7.0.x" ]
    
    steps:
      - uses: Slashgear/action-check-pr-title@v3.0.0
        with:
          regexp: '(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\(([a-zA-z0-9\-])+\))?: .{1,80}'

      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTION_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: https://nuget.pkg.github.com/piotrkantorowicz/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.ACTION_GITHUB_TOKEN}}

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Tests
        run: dotnet test --settings tests.runsettings --logger "trx;LogFilePrefix=TestResults.trx" --results-directory "TestResults" --collect:"XPlat Code Coverage"

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          format: 'markdown'
          output: 'both'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: TestResults

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          nunit_files: "TestResults/nunit/**/*.xml"
          trx_files: "TestResults/**/*.trx"